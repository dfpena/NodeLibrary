{"nodes":[{"nid":23,"uid":"custom","category":"function","type":"GothamFilter","x":686,"y":432,"fields":{"in":[{"name":"start"}],"out":[{"name":"pass"}]},"python":"@on_start\ndef gothamFilter|||(*args,**kwargs):\n    def channel_adjust(channel, values):\n        orig_size = channel.shape\n        flat_channel = channel.flatten()\n        adjusted = np.interp(flat_channel, np.linspace(0, 1, len(values)), values)\n        return adjusted.reshape(orig_size)\n    r = kwargs['Data'][:, :, 0]\n    b = kwargs['Data'][:, :, 2]\n    r_boost_lower = channel_adjust(r, [\n        0, 0.05, 0.1, 0.2, 0.3,\n        0.5, 0.7, 0.8, 0.9,\n        0.95, 1.0])\n    b_more = np.clip(b + 0.03, 0, 1.0)\n    merged = np.stack([r_boost_lower, kwargs['Data'][:, :, 1], b_more], axis=2)\n    blurred = sk.filters.gaussian(merged, sigma=10, multichannel=True)\n    final = np.clip(merged * 1.3 - blurred * 0.3, 0, 1.0)\n    b = final[:, :, 2]\n    b_adjusted = channel_adjust(b, [\n        0, 0.047, 0.118, 0.251, 0.318,\n        0.392, 0.42, 0.439, 0.475,\n        0.561, 0.58, 0.627, 0.671,\n        0.733, 0.847, 0.925, 1])\n    final[:, :, 2] = b_adjusted\n    kwargs['Data'] = final\n    return kwargs\n","python_import":"import numpy as np\nimport skimage as sk","python_exec":"gothamFilter|||","settings":[],"icon":"./static/media/timer.ae907aa2.svg","data":{},"description":"","headerStyle":{"background":"#15ad60"}}],"connections":[],"title":"GothamFilter","showPopup":false,"current":-1,"count":1,"servers":{},"serverselection":null}